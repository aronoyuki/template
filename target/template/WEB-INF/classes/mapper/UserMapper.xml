<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.aptx4869.module.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.aptx4869.module.po.User">
    <result column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="SALT" jdbcType="VARCHAR" property="salt" />
    <result column="DESCRIBE" jdbcType="CHAR" property="describe" />
    <result column="CREATE_TIME" jdbcType="DATE" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="DATE" property="updateTime" />
    <result column="DELETE_TME" jdbcType="DATE" property="deleteTme" />
    <result column="CREATOR_ID" jdbcType="VARCHAR" property="creatorId" />
    <result column="UPDATER_ID" jdbcType="VARCHAR" property="updaterId" />
    <result column="DELETER_ID" jdbcType="VARCHAR" property="deleterId" />
    <result column="DELETED" jdbcType="TINYINT" property="deleted" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UUID, `CODE`, `NAME`, `PASSWORD`, SALT, `DESCRIBE`, CREATE_TIME, UPDATE_TIME, DELETE_TME,
    CREATOR_ID, UPDATER_ID, DELETER_ID, DELETED, VERSION
  </sql>
  <select id="selectByExample" parameterType="cn.aptx4869.module.po.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.aptx4869.module.po.UserExample">
    delete from USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.aptx4869.module.po.User">
    insert into USER (UUID, CODE, NAME, 
      PASSWORD, SALT, DESCRIBE, 
      CREATE_TIME, UPDATE_TIME, DELETE_TME, 
      CREATOR_ID, UPDATER_ID, DELETER_ID, 
      DELETED, VERSION)
    values (#{uuid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{describe,jdbcType=CHAR}, 
      #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, #{deleteTme,jdbcType=DATE}, 
      #{creatorId,jdbcType=VARCHAR}, #{updaterId,jdbcType=VARCHAR}, #{deleterId,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=TINYINT}, #{version,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.aptx4869.module.po.User">
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        UUID,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="salt != null">
        SALT,
      </if>
      <if test="describe != null">
        DESCRIBE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="deleteTme != null">
        DELETE_TME,
      </if>
      <if test="creatorId != null">
        CREATOR_ID,
      </if>
      <if test="updaterId != null">
        UPDATER_ID,
      </if>
      <if test="deleterId != null">
        DELETER_ID,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="deleteTme != null">
        #{deleteTme,jdbcType=DATE},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="deleterId != null">
        #{deleterId,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.aptx4869.module.po.UserExample" resultType="java.lang.Long">
    select count(*) from USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update USER
    <set>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        SALT = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        DESCRIBE = #{record.describe,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.deleteTme != null">
        DELETE_TME = #{record.deleteTme,jdbcType=DATE},
      </if>
      <if test="record.creatorId != null">
        CREATOR_ID = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.updaterId != null">
        UPDATER_ID = #{record.updaterId,jdbcType=VARCHAR},
      </if>
      <if test="record.deleterId != null">
        DELETER_ID = #{record.deleterId,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        DELETED = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update USER
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      SALT = #{record.salt,jdbcType=VARCHAR},
      DESCRIBE = #{record.describe,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      DELETE_TME = #{record.deleteTme,jdbcType=DATE},
      CREATOR_ID = #{record.creatorId,jdbcType=VARCHAR},
      UPDATER_ID = #{record.updaterId,jdbcType=VARCHAR},
      DELETER_ID = #{record.deleterId,jdbcType=VARCHAR},
      DELETED = #{record.deleted,jdbcType=TINYINT},
      VERSION = #{record.version,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="queryAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from USER
  </select>
</mapper>